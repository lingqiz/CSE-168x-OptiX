In order to compile you need the following.

0. An NVIDIA graphics card with R435.80 driver or newer. It doesn't have to be
   an RTX card. If you don't know the version of the driver, just upgrade it 
   to the newest version. 

1. CUDA Toolkit 5.0+ (https://developer.nvidia.com/cuda-downloads). Install the 
   latest version if you don't have CUDA yet.

2. CMake 3.0 minimum (http://www.cmake.org/cmake/resources/software.html).
   I suggest the executable installer.

3. Visual Studio. 2017 or 2019 should work.

4. OptiX 6.5.0 (https://developer.nvidia.com/designworks/optix/download).

--------------------------------------------------------------------------------

Instructions for building:

1. Start up cmake-gui from the Start Menu.

2. Select the current directory as the source file location.

3. Create a build directory under the current directory. If you type in the 
   directory (instead of using the "Browse Build..." button), CMake will ask 
   you at the next step to create the directory for you if it doesn't already 
   exist.

4. Press "Configure" button and choose Visual Studio 2017 or 2019 as the 
   generator. Under "optional platform for generator", select "x64". OptiX only 
   support 64 bit builds. Press "Finish" to start the configuration. If 
   successful, you should see "Configuring done" at the bottom. 

5. Press "Generate" to generate the Visual Studio solution. 

6. Open the CSE-168.sln solution file in the build directory you created. You 
   can also click "Open Project" in CMake.

7. You should be able to see a button called "Local Windows Debugger" on the 
   top. To its left, there is drop down menu whose default value is set to 
   "Debug". It indicates the configuration of the solution. Set it to "Release"
   for maximum performance. 

8. In the Solution Explorer, you should be able to find a project called 
   "OptiXRenderer". Right click it and select "Set as StartUp Project". Then
   right click it again and select "Properties". Change "Configuration" to 
   "All Configurations". Now go to "Configuration Properties" -> "Debugging" 
   and modify the following fields:
   * Working Directory - Change "$(ProjectDir)" to "$(ProjectDir)/../..". This
   will set the working directory to the top-most directory, which contains the
   directories "OptiXRenderer" and "Scenes". 
   * Command Arguments - Set it to the scene you want to run. Its path can be 
   absolute or relative to the working directory. For example, you can set it 
   to "Scenes/hw1/scene1.test". 

9. Now run the program by pressing F5 or ctrl + F5. It should spawn a new 
   window which serves as an image viewer. When you close the viewer, the 
   generated image will be automatically saved to the top-most directory. 

10. After you create new source files, remember to add them to 
    OptiXRenderer/CMakeLists.txt and compile it to make it effective by 
    ctrl + F7. A prompt will show up and you should choose "Reload All".   

Note that due to the way dependencies are automatically handled for CUDA
compilation in Visual Studio, if you build again Visual Studio will likely ask
you to reload your projects. Please do so. Subsequent compiles should not
result in reloading unless you change the files that are included by a CUDA
file.
